==714== Memcheck, a memory error detector
==714== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==714== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==714== Command: ./lazycopy 13
==714== 
==714== 
==714== FILE DESCRIPTORS: 3 open at exit.
==714== Open file descriptor 2:
==714==    <inherited from parent>
==714== 
==714== Open file descriptor 1:
==714==    <inherited from parent>
==714== 
==714== Open file descriptor 0: /dev/tty1
==714==    <inherited from parent>
==714== 
==714== 
==714== HEAP SUMMARY:
==714==     in use at exit: 0 bytes in 0 blocks
==714==   total heap usage: 36 allocs, 36 frees, 77,484 bytes allocated
==714== 
==714== All heap blocks were freed -- no leaks are possible
==714== 
==714== For counts of detected and suppressed errors, rerun with: -v
==714== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
myArray1.Print();   [1] [2] [3] [4] [5] 
myArray2.Print();   [1] [2] [3] [4] [5] [6] [7] [8] [9] [10] [11] [12] [13] 
myArray3.Print();   [1] [2] [3] [4] [5] [6] [7] [8] [9] [10] 
Assign myArray3=myArray1;
myArray1.Print();   [1] [2] [3] [4] [5] 
myArray2.Print();   [1] [2] [3] [4] [5] [6] [7] [8] [9] [10] [11] [12] [13] 
myArray3.Print();   [1] [2] [3] [4] [5] 
Assign myArray3=myArray2;
myArray1.Print();   [1] [2] [3] [4] [5] 
myArray2.Print();   [1] [2] [3] [4] [5] [6] [7] [8] [9] [10] [11] [12] [13] 
myArray3.Print();   [1] [2] [3] [4] [5] [6] [7] [8] [9] [10] [11] [12] [13] 
live  nodes  18
total nodes  28
